name: Create branch and PR from issue

on:
  issues:
    types: [opened]

jobs:
  create-branch-and-pr:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request == null
    permissions:
      contents: write
      issues: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Extract issue info and determine folder
        id: setup
        run: |
          echo "ISSUE_NUMBER=${{ github.event.issue.number }}" >> $GITHUB_ENV
          
          # Sanitize title for branch name
          SANITIZED_TITLE=$(echo "${{ github.event.issue.title }}" | tr -d '\n' | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9 ]//g' | tr ' ' '-' | sed 's/--*/-/g' | sed 's/^-\|-$//g')
          echo "ISSUE_TITLE=$SANITIZED_TITLE" >> $GITHUB_ENV
          
          # Determine folder based on labels
          FOLDER="misc"
          LABELS="${{ toJson(github.event.issue.labels.*.name) }}"
          
          if echo "$LABELS" | grep -qi "backend"; then
            FOLDER="serve-be"
          elif echo "$LABELS" | grep -qi "frontend"; then
            FOLDER="serve-fe"
          fi
          
          echo "TARGET_FOLDER=$FOLDER" >> $GITHUB_ENV
          echo "Selected folder: $FOLDER"

      - name: Create placeholder file
        run: |
          mkdir -p "$TARGET_FOLDER/.issue-placeholders"
          cat > "$TARGET_FOLDER/.issue-placeholders/issue-${{ env.ISSUE_NUMBER }}.md" << 'EOF'
          # Issue #${{ env.ISSUE_NUMBER }}
          
          **Title:** ${{ github.event.issue.title }}
          **Created:** $(date)
          **Author:** ${{ github.event.issue.user.login }}
          
          ## Description
          ${{ github.event.issue.body }}
          
          ## Link
          ${{ github.event.issue.html_url }}
          EOF

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            feat: initial commit for issue #${{ env.ISSUE_NUMBER }}
            
            - Auto-generated branch for issue #${{ env.ISSUE_NUMBER }}
            - Target folder: ${{ env.TARGET_FOLDER }}
            - Created placeholder file
          branch: issue-${{ env.ISSUE_NUMBER }}-${{ env.ISSUE_TITLE }}
          base: develop
          title: "🔧 Issue #${{ env.ISSUE_NUMBER }}: ${{ github.event.issue.title }}"
          body: |
            ## 📋 Auto-generated PR for Issue #${{ env.ISSUE_NUMBER }}
            
            **Issue:** ${{ github.event.issue.html_url }}
            **Target Folder:** `${{ env.TARGET_FOLDER }}`
            
            ### 📝 Issue Details
            ${{ github.event.issue.body }}
            
            ### ✅ What's included
            - Created branch: `issue-${{ env.ISSUE_NUMBER }}-${{ env.ISSUE_TITLE }}`
            - Added placeholder file in `${{ env.TARGET_FOLDER }}/.issue-placeholders/`
            
            ---
            
            Closes #${{ env.ISSUE_NUMBER }}
          delete-branch: false
